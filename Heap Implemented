#include<bits/stdc++.h>
using namespace std;
void heapifyMinHeap(int a[],int n,int i) //log(n)
{
    int smallest= i;
    int left= ((2*i)+1);
     int right= ((2*i)+2);
     
     if((left<n)&&(a[left]<a[smallest])) { smallest=left;}
     if((right<n)&&(a[right]<a[smallest])) { smallest=right;}
     
     if(smallest!=i)
     {
         swap(a[smallest],a[i]);
         heapifyMinHeap(a,n,smallest);
     }
}
void heapifyMaxHeap(int a[],int n,int i) //log(n)
{
    int largest= i;
    int left= ((2*i)+1);
     int right= ((2*i)+2);
     
     if((left<n)&&(a[left]>a[largest])) { largest=left;}
     if((right<n)&&(a[right]>a[largest])) { largest=right;}
     
     if(largest!=i)
     {
         swap(a[largest],a[i]);
         heapifyMaxHeap(a,n,largest);
     }
}
void insertMinHeap(int a[],int* n,int ele) //log(n)
{
    int ind=(*n);
      a[ind]=ele;
    int par= ((ind-1)/2);
    while(a[par]>a[ind])
    {
        swap(a[par],a[ind]);
        ind=par;
        par=((ind-1)/2);
    }
    (*n)++;
}
void removeMinHeap(int a[],int* n) //log(n)
{
    
    swap(a[0],a[(*n)-1]);
    heapifyMinHeap(a,(*n)-1,0);
    (*n)--;
}
void removeMaxHeap(int a[],int* n) //log(n)
{
    
    swap(a[0],a[(*n)-1]);
    heapifyMaxHeap(a,(*n)-1,0);
    (*n)--;
}
void insertMaxHeap(int a[],int* n,int ele) //log(n)
{
    int ind=(*n);
     a[ind]=ele;
    int par= ((ind-1)/2);
    while(a[par]<a[ind])
    {
        swap(a[par],a[ind]);
        ind=par;
        par=((ind-1)/2);
    }
    (*n)++;
}
void rebalance(int a[],int b[],int* sa,int* sb)
{
    
    if(   ( (*sa)-(*sb) )>=2 )
    {
        int ele=a[0];
        removeMaxHeap(a,sa);
        insertMinHeap(b,sb,ele);
    }
    else if(    (  (*sb)- (*sa) )   >=2   )
    {
         int ele=b[0];
        removeMinHeap(b,sb);
        insertMaxHeap(a,sa,ele);
    }
}
double solve(int a[],int b[],int sa,int sb)
{
    if(sa>sb) return (double)a[0];
    else if(sb>sa) return (double)b[0];
    else return ((a[0]+b[0])/(double)2) ;
}

void convertArraytoMinHeap(int a[ ],int n) //Heapify for all elements - nlogn
{
    for(int i=(n-1);i>=0;i--)
    heapifyMinHeap(a,n,i);   
}
void convertArraytoMaxHeap(int a[ ],int n) //Heapify for all elements - nlogn
{
    for(int i=(n-1);i>=0;i--)
    heapifyMaxHeap(a,n,i);   
}
int main()
{
    int t;
    cin>>t;
    int a[1000001]; //max
    int b[1000001]; //min
    int sa=0;
    int sb=0;
    while(t--)
    {
        int x;
        cin>>x;
        
        if(sa==0&&sb==0){ 
            insertMaxHeap(a,&sa,x); }
        else if(x>=a[0]) { 
            insertMinHeap(b,&sb,x);  }
        else {
            insertMaxHeap(a,&sa,x);
        }
        
        rebalance(a,b,&sa,&sb);
        
        cout<<solve(a,b,sa,sb)<<endl;
        
    }
}
